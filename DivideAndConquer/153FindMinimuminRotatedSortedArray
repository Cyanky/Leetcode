******Bineary Search (can be  used in rotated list)

class Solution:
    def findMin(self, nums: List[int]) -> int:
        res = nums[0]
        l, r = 0, len(nums) - 1
        
        while l <= r:  /////when the pointers are in a valid position
            if nums[l] < nums[r]:
                res = min(res, nums[l])
                break////////while the list has been sorted
                
            m = (l + r) //  2  **************integer division by 2
            res = min(res, nums[m])
            if nums[m] >= nums[l]:
                l = m + 1
            else:
                r = m - 1
        return res
        
        
        -------------time complexity: O(logn) (half of it can be processed in O(1), half it is T(N/2)) 
        
