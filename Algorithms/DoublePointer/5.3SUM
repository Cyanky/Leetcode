class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        int target = 0;
        Arrays.sort(nums);
        
        if (nums.length < 3) return result;
        
        for (int i = 0; i < nums.length; i++){
            if (i > 0 && nums[i] == nums[i-1]) continue;
            int j = i + 1;
            int k = nums.length - 1;
            while(j < k){
                if(nums[i] + nums[j] + nums[k] < target){
                    j++;
                    while (j < k && nums[j] == nums[j - 1]) j++;
                }else if(nums[i] + nums[j] + nums[k] > target){
                    k--;
                    while (j < k && nums[k] == nums[k + 1]) k--;
                }else{
                    result.add(Arrays.asList(nums[i], nums[j], nums[k]));
                    j++;
                    k--;
                    while (j < k && nums[j] == nums[j - 1]) j++;
                    while (j < k && nums[k] == nums[k + 1]) k--;
                }
            }
        }
        return result;
    }
}

-----------------------------------------
TC: O(n^2) (two loops)
SC: O(1) ("result")
