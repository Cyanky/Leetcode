class Solution:
    def twoSum(self, numbers: List[int], target: int) -> List[int]:
        l, r = 0, len(numbers) - 1
        
        while l < r:
            curSum = numbers[l] + numbers[r]
            
            if curSum > target:
                r -= 1
            elif curSum < target:
                l += 1
            else:
                return[l + 1, r + 1]***************** 1-indexed array (not difined in begin)
        return[] ****************BE CAREFUL with the pragraph it should be
        
 ---------------T = O(N)
 ---------------S = O(1) (Only two more varaibale be used, numbers[l] & numbers[r])
 
 
 # JAVA
 
 class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int i = 0;
        int j = numbers.length - 1;
        while (i < j) {
            int sum = numbers[i] + numbers[j];
            if (sum < target) {
                i ++ ;
            } else if (sum > target){
                j --;
            }else{
                return new int[]{i+1, j+1};
            }
            }
        return null;
    }
}
